plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.7'
    id 'io.spring.dependency-management' version '1.1.4'
    id "org.asciidoctor.jvm.convert" version "3.3.2"
}

group = 'com.moment'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    asciidoctorExt // asciidoctorExt에 대한 선언
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.4'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

    //jwt
    implementation 'com.auth0:jwks-rsa:0.21.1'
    implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
    implementation 'com.auth0:java-jwt:4.0.0'
    implementation 'javax.xml.bind:jaxb-api:2.3.0'
    implementation 'commons-io:commons-io:2.11.0'
    implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'

    testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.21.0'
    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor' // asciidoctorExt에 spring-restdocs-asciidoctor 의존성 추가
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc' // mockMvc 사용

}
ext {
    set('springCloudVersion', "2022.0.3")
    snippetsDir = file('build/generated-snippets') // 스니펫이 생성되는 디렉터리 경로를 설정
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
//asciidoctor { // Gradle이 asciidoctor Task를 수행하는 설정 (함수 선언)
//    configurations 'asciidoctorExt' // asciidoctor 확장 설정
//    baseDirFollowsSourceFile() // .adoc 파일을 include 하면서 사용하기 위한 설정
//    inputs.dir snippetsDir // 스니펫을 불러올 위치 설정
//    dependsOn test // Gradle의 test Task 이후 asciidoctor를 수행
//}
//
//asciidoctor.doFirst { // asciidoctor Task가 수행될 때 가장 먼저 수행
//    delete file('src/main/resources/static/docs')
//}
//
//task copyDocument(type: Copy) { // 생성된 html 파일을 옮긴다
//    dependsOn asciidoctor // Gradle의 asciidoctor Task 이후 수행
//    from file("${asciidoctor.outputDir}")
//    into file("src/main/resources/static/docs")
//}
//
//build {
//    dependsOn copyDocument // build 이후 html 파일 복사
//}
//
//bootJar {
//    dependsOn asciidoctor // asciidoctor 이후 bootJar 수행
//    from ("${asciidoctor.outputDir}") {
//        into 'static/docs'
//    }
//
//}
